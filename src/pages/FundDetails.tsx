import { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import { Container, Typography, Card, CardContent, CircularProgress } from "@mui/material";
import { Fund } from "../types";
import { api } from "../api";

const FundDetails = () => {
  const { id } = useParams<{ id: string }>();
  const [fund, setFund] = useState<Fund | null>(null);
  const [loading, setLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null);

  const mockFunds: Fund[] = [
    { id: "1", name: "–ü–æ–º–æ—â—å –¥–µ—Ç—è–º", image: "/images/fund1.jpg", progress: 60, isHot: true, volunteer: "–ò–≤–∞–Ω", recipient: "–û—Ä—Ñ–∞–Ω" },
    { id: "2", name: "–ú–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã", image: "/images/fund2.jpg", progress: 30, isHot: false, volunteer: "–ê–Ω–Ω–∞", recipient: "–ë–æ–ª—å–Ω–∏—Ü–∞" }
  ];

  

  useEffect(() => {
    const fetchFund = async () => {
      try {
        // const response = await api.get<Fund>(`/funds/${id}`);
        // setFund(response.data);
        if (id === "1") {
          setFund(mockFunds[0]);
        } else if (id === "2") {
          setFund(mockFunds[1]);
        }
      } catch (err) {
        setError("Error fetching data");
      } finally {
        setLoading(false);
      }
    };

    fetchFund();
  }, [id]);

  if (loading) return <CircularProgress />;
  if (error) return <Typography color="error">{error}</Typography>;
  if (!fund) return <Typography color="error">–ó–±—ñ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</Typography>;

  return (
    <Container sx={{ width: 1024, mt: 4 }}>
      <Card>
        <CardContent>
        <Typography variant="h4">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∑–±—ñ—Ä</Typography>
          <Typography variant="h6" sx={{ mt: 2 }}>{fund.name}</Typography>
          <img src={fund.image} alt={fund.name} style={{ width: "100%", maxHeight: 400, objectFit: "cover" }} />
          <Typography variant="h6">–ü—Ä–æ–≥—Ä–µ—Å: {fund.progress}%</Typography>
          {fund.isHot && <Typography color="error">üî• –®–≤–∏–¥–∫–∏–π!</Typography>}
          <Typography>–í–æ–ª–æ–Ω—Ç–µ—Ä: {fund.volunteer}</Typography>
          <Typography>–û—Ç—Ä–∏–º—É–≤–∞—á: {fund.recipient}</Typography>
        </CardContent>
      </Card>
    </Container>
  );
};

export default FundDetails;
